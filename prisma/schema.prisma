generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String                  @id @unique @default(uuid())
  isActive          Boolean                 @default(false)
  createdAt         DateTime                @default(now())
  fullName          String
  countryId         String                  
  country           Countries               @relation(fields: [countryId], references: [id])          
  email             String                  @unique
  hashedPassword    String
  dateOfBirth       DateTime
  isPaidUser        Boolean                 @default(false)
  gender            Gender                  @default(unknown)
  role              UserRole                @default(paid)
}


model Employee {
  id                String                  @id @unique @default(uuid())
  isActive          Boolean                 @default(false)
  createdAt         DateTime                @default(now())
  fullName          String
  email             String                  @unique
  hashedPassword    String
  dateOfBirth       DateTime
  employeeNumber    Int                     @unique
  jobTitle          EmployeeRole            @default(NOT_ASSIGNED)
  countryId         String                  
  country           Countries               @relation(fields: [countryId], references: [id])          
  gender            Gender                  @default(unknown)
}

enum Gender {
  male
  female
  other
  unknown
}

enum EmployeeRole {
  ADMIN
  PROGRAMMER
  CUSTOMER_SUPPORT
  MANAGER
  NOT_ASSIGNED
}

model Countries {
  id                    String          @id @unique @default(uuid())
  countryNamePt         String          @unique 
  countryNameEn         String          @unique  
  CoutryFlag            String
  users                 User[]
  employees             Employee[]
}

enum UserRole {
  notPaid
  paid
}

model Currency {
  id                    String   @id @default(uuid())
  name                  String   @unique
  short_code            String   @unique
  code                  String
  precision             Int
  subunit               Int
  symbol                String
  symbol_first          Boolean
  decimal_mark          String
  thousands_separator   String
  rate                  Float
}

model Platform {
  id                  String      @id @default(uuid())
  name                String
  image               String
  type                PlatformType
  website             String           @unique
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  status              PlatformStatus @default(ACTIVE)
}

enum PlatformStatus {
  ACTIVE
  INACTIVE
}

enum PlatformType {
  Bank
  Crypto_Exchange
  Crypto_Wallet
}